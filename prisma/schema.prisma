generator client {
  provider = "prisma-client-js"
  // output   = "./src/generated/prisma" // vercel
  // output   = "../src/generated/prisma" // local
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                 String             @id @default(uuid()) @db.Uuid
  name               String
  email              String             @unique
  password           String
  familias           familia_usuarios[]
  lembretesEnviados  Lembrete[]         @relation("UsuarioEnviouLembrete")
  lembretesRecebidos Lembrete[]         @relation("UsuarioRecebeuLembrete")
  listasEnviadas     ListaDeCompra[]    @relation("UsuarioEnviouLista")
  listasRecebidas    ListaDeCompra[]    @relation("UsuarioRecebeuLista")
  veiculos           Veiculo[]

  @@map("usuarios")
}

model Familia {
  id        String             @id @default(uuid()) @db.Uuid
  nome      String
  usuarioId String             @map("usuario_id") @db.Uuid
  usuarios  familia_usuarios[]

  @@map("familia")
}

model familia_usuarios {
  id_usuario String  @db.Uuid
  id_familia String  @db.Uuid
  rotulo     Rotulo  @default(FILHO)
  familia    Familia @relation(fields: [id_familia], references: [id], onDelete: Cascade)
  usuario    Usuario @relation(fields: [id_usuario], references: [id], onDelete: Cascade)

  @@id([id_usuario, id_familia])
  @@map("familia_usuarios")
}

model ListaDeCompra {
  id               String              @id @default(uuid()) @db.Uuid
  nome             String
  usuarioIdEnviou  String              @map("usuario_id_enviou") @db.Uuid
  usuarioIdRecebeu String              @map("usuario_id_recebeu") @db.Uuid
  status           String              @default("Pendente")
  itens            ItemListaDeCompra[]
  lembretes        Lembrete[]
  usuarioEnviou    Usuario             @relation("UsuarioEnviouLista", fields: [usuarioIdEnviou], references: [id], onDelete: Cascade)
  usuarioRecebeu   Usuario             @relation("UsuarioRecebeuLista", fields: [usuarioIdRecebeu], references: [id], onDelete: Cascade)

  @@map("lista_de_compras")
}

model ItemListaDeCompra {
  id         String        @id @default(uuid()) @db.Uuid
  descricao  String
  quantidade Int
  listaId    String        @map("lista_id") @db.Uuid
  comprado   Boolean       @default(false)
  lista      ListaDeCompra @relation(fields: [listaId], references: [id], onDelete: Cascade)

  @@map("itens_lista_de_compras")
}

model Veiculo {
  id          String                 @id @default(uuid()) @db.Uuid
  marca       String
  modelo      String
  ano         Int
  placa       String                 @unique
  usuarioId   String                 @map("usuario_id") @db.Uuid
  Lembrete    Lembrete[]
  manutencoes RegistroDeManutencao[]
  usuario     Usuario                @relation(fields: [usuarioId], references: [id], onDelete: Cascade)

  @@map("veiculos")
}

model RegistroDeManutencao {
  id        String   @id @default(uuid()) @db.Uuid
  descricao String
  data      DateTime
  veiculoId String   @map("veiculo_id") @db.Uuid
  veiculo   Veiculo  @relation(fields: [veiculoId], references: [id])

  @@map("registros_de_manutencao")
}

model Lembrete {
  id               String        @id @default(uuid()) @db.Uuid
  titulo           String
  descricao        String
  dataHora         DateTime      @map("data_hora")
  usuarioIdEnviou  String        @map("usuario_id_enviou") @db.Uuid
  usuarioIdRecebeu String        @map("usuario_id_recebeu") @db.Uuid
  listaDeCompraId  String        @map("lista_de_compra_id") @db.Uuid
  veiculoId        String        @map("veiculo_id") @db.Uuid
  listaDeCompra    ListaDeCompra @relation(fields: [listaDeCompraId], references: [id], onDelete: Cascade)
  usuarioEnviou    Usuario       @relation("UsuarioEnviouLembrete", fields: [usuarioIdEnviou], references: [id], onDelete: Cascade)
  usuarioRecebeu   Usuario       @relation("UsuarioRecebeuLembrete", fields: [usuarioIdRecebeu], references: [id], onDelete: Cascade)
  veiculo          Veiculo       @relation(fields: [veiculoId], references: [id])

  @@map("lembretes")
}

enum Rotulo {
  PAIS
  FILHO
}
