generator client {
  provider = "prisma-client-js"

  // Assim n√£o terei o GENERATED local
  // output   = "./src/generated/prisma" // vercel
  output = "../src/generated/prisma" // local
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id       String @id @default(uuid()) @db.Uuid
  name     String
  email    String @unique
  password String

  familias          familia_usuarios[]
  lembretesEnviados Lembrete[]         @relation("UsuarioEnviouLembrete")
  listasEnviadas    ListaDeCompra[]    @relation("UsuarioEnviouLista")
  veiculos          Veiculo[]
  tarefas           Tarefa[]

  @@index([email])
  @@map("usuarios")
}

model Familia {
  id   String @id @default(uuid()) @db.Uuid
  nome String

  usuarioId String             @map("usuario_id") @db.Uuid
  usuarios  familia_usuarios[]

  @@map("familia")
}

model familia_usuarios {
  id_usuario String @db.Uuid
  id_familia String @db.Uuid
  rotulo     Rotulo @default(FILHO)

  familia Familia @relation(fields: [id_familia], references: [id], onUpdate: Cascade, onDelete: Cascade)
  usuario Usuario @relation(fields: [id_usuario], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@id([id_usuario, id_familia])
  @@map("familia_usuarios")
}

model ListaDeCompra {
  id              String  @id @default(uuid()) @db.Uuid
  tipo            String
  usuarioIdEnviou String  @map("usuario_id_enviou") @db.Uuid
  status          Boolean @default(false)

  usuarioEnviou Usuario @relation("UsuarioEnviouLista", fields: [usuarioIdEnviou], references: [id], onDelete: Cascade, onUpdate: Cascade)

  itens      ItemListaDeCompra[]
  lembretes  Lembrete[]
  atividades Atividade[]

  @@map("lista_de_compras")
}

model ItemListaDeCompra {
  id         String  @id @default(uuid()) @db.Uuid
  descricao  String
  quantidade Int
  comprado   Boolean @default(false)

  // Chaves estrangeiras - Relacionamento
  listaId String        @map("lista_id") @db.Uuid
  lista   ListaDeCompra @relation(fields: [listaId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("itens_lista_de_compras")
}

model Veiculo {
  id     String  @id @default(uuid()) @db.Uuid
  marca  String?
  modelo String?
  ano    Int?
  placa  String  @unique

  // Chaves estrangeiras - Relacionamento
  usuarioId String  @map("usuario_id") @db.Uuid
  usuario   Usuario @relation(fields: [usuarioId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  Lembrete    Lembrete[]
  manutencoes RegistroDeManutencao[]
  atividades  Atividade[]

  @@map("veiculos")
}

model RegistroDeManutencao {
  id        String   @id @default(uuid()) @db.Uuid
  descricao String?
  data      DateTime
  valor     Float?

  // Chaves estrangeiras - Relacionamento
  veiculoId String  @map("veiculo_id") @db.Uuid
  veiculo   Veiculo @relation(fields: [veiculoId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("registros_de_manutencao")
}

model Lembrete {
  id        String   @id @default(uuid()) @db.Uuid
  descricao String
  dataHora  DateTime @default(now()) @map("data_hora")
  status    Boolean  @default(false)

  // Chaves estrangeiras
  usuarioIdEnviou String @map("usuario_id_enviou") @db.Uuid
  listaDeCompraId String @map("lista_de_compra_id") @db.Uuid
  veiculoId       String @map("veiculo_id") @db.Uuid

  // Relacionamentos
  listaDeCompra ListaDeCompra @relation(fields: [listaDeCompraId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  usuarioEnviou Usuario       @relation("UsuarioEnviouLembrete", fields: [usuarioIdEnviou], references: [id], onDelete: Cascade, onUpdate: Cascade)
  veiculo       Veiculo       @relation(fields: [veiculoId], references: [id])

  atividades Atividade[]

  @@map("lembretes")
}

model Tarefa {
  id        String  @id @default(uuid()) @db.Uuid
  descricao String
  status    Boolean @default(false)

  // Chaves estrangeiras - Relacionamento
  usuarioId String  @map("usuario_id") @db.Uuid
  usuario   Usuario @relation(fields: [usuarioId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  atividades Atividade[]

  @@map("tarefas")
}

enum TipoAtividade {
  LEMBRETE
  TAREFA
  LISTA
  VEICULO
}

enum AcaoAtividade {
  CRIADA
  ATUALIZADA
  EXCLUIDA
}

model Atividade {
  id       String        @id @default(uuid()) @db.Uuid
  tipo     TipoAtividade
  acao     AcaoAtividade
  dataHora DateTime      @default(now()) @map("data_hora")

  // Chaves estrangeiras
  tarefaId        String? @map("tarefa_id") @db.Uuid
  listaDeCompraId String? @map("lista_de_compra_id") @db.Uuid
  lembreteId      String? @map("lembrete_id") @db.Uuid
  veiculoId       String? @map("veiculo_id") @db.Uuid

  // Relacionamentos
  tarefa   Tarefa?        @relation(fields: [tarefaId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  lista    ListaDeCompra? @relation(fields: [listaDeCompraId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  lembrete Lembrete?      @relation(fields: [lembreteId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  veiculo  Veiculo?       @relation(fields: [veiculoId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("atividades")
}

enum Rotulo {
  PAIS
  FILHO
}
